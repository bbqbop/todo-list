/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/icons.js":
/*!**********************!*\
  !*** ./src/icons.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"iconDelete\": () => (/* binding */ iconDelete),\n/* harmony export */   \"iconEnter\": () => (/* binding */ iconEnter),\n/* harmony export */   \"iconMinus\": () => (/* binding */ iconMinus),\n/* harmony export */   \"iconPlus\": () => (/* binding */ iconPlus)\n/* harmony export */ });\n\nvar iconPlus = document.createElement('p');\niconPlus.innerHTML = '<?xml version=\"1.0\" ?><!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools --><svg width=\"1rem\" height=\"1rem\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title/><g id=\"Complete\"><g data-name=\"add\" id=\"add-2\"><g><line fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"12\" x2=\"12\" y1=\"19\" y2=\"5\"/><line fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"5\" x2=\"19\" y1=\"12\" y2=\"12\"/></g></g></g></svg>';\nvar iconMinus = document.createElement('p');\niconMinus.innerHTML = '<svg width=\"1rem\" height=\"1rem\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"> <title></title> <g id=\"Complete\"> <g id=\"minus\"> <line fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"4\" x2=\"20\" y1=\"12\" y2=\"12\"></line> </g> </g> </g></svg>';\nvar iconDelete = document.createElement('p');\niconDelete.innerHTML = '<svg width=\"2rem\" height=\"2rem\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"> <path d=\"M7.70015 6.35982L3.53349 11.3598C3.22445 11.7307 3.22445 12.2693 3.53349 12.6402L7.70015 17.6402C7.89015 17.8682 8.1716 18 8.46838 18H18C19.6569 18 21 16.6569 21 15V9C21 7.34315 19.6569 6 18 6H8.46837C8.1716 6 7.89015 6.13182 7.70015 6.35982Z\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path> <path d=\"M15 10L13 12M13 12L11 14M13 12L11 10M13 12L15 14\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path> </g></svg>';\nvar iconEnter = document.createElement('p');\niconEnter.innerHTML = '<svg height=\"2.5rem\" width=\"2.5rem\" version=\"1.1\" id=\"图层_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 40 40\" enable-background=\"new 0 0 40 40\" xml:space=\"preserve\" fill=\"#000000\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"> <g> <g> <g> <g> <path fill=\"#231815\" d=\"M14,22h10c0.8,0,1.5-0.7,1.5-1.5v-6c0-0.3,0.2-0.5,0.5-0.5s0.5,0.2,0.5,0.5v6c0,1.4-1.1,2.5-2.5,2.5H14 V22z\"></path> </g> <g> <path fill=\"#231815\" d=\"M17,26c-0.1,0-0.3,0-0.4-0.1l-3-3c-0.2-0.2-0.2-0.5,0-0.7l3-3c0.2-0.2,0.5-0.2,0.7,0s0.2,0.5,0,0.7 l-2.6,2.6l2.6,2.6c0.2,0.2,0.2,0.5,0,0.7C17.3,26,17.1,26,17,26z\"></path> </g> </g> </g> </g> </g></svg>';\n\n//# sourceURL=webpack://my-webpack-project/./src/icons.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"projects\": () => (/* binding */ projects)\n/* harmony export */ });\n/* harmony import */ var _ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ui */ \"./src/ui.js\");\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./style.css */ \"./src/style.css\");\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./icons.js */ \"./src/icons.js\");\n\n\n\n\nvar ui = (0,_ui__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\nvar projects = {\n  list: [],\n  erase: function erase(idx) {\n    this.list.splice(idx, 1);\n    UIController.update();\n  },\n  focus: function focus(idx) {\n    var _this = this;\n    this.list.forEach(function (entry) {\n      entry === _this.list[idx] ? entry.isCurrentProject = true : entry.isCurrentProject = false;\n    });\n    UIController.update();\n  },\n  findCurrentProject: function findCurrentProject() {\n    var currentProject = this.list.find(function (project) {\n      return project.isCurrentProject === true;\n    });\n    return currentProject;\n  },\n  findCurrentTask: function findCurrentTask() {\n    var currentProject = this.findCurrentProject();\n    if (!currentProject) return;\n    var currentTask = currentProject.todoList.find(function (task) {\n      return task.isCurrentTask === true;\n    });\n    return currentTask;\n  }\n};\n\n// USER INPUTS\n\nvar UIController = function eventListeners() {\n  document.addEventListener('submit', function (e) {\n    e.preventDefault();\n    if (e.target.id === 'taskForm') {\n      handleUserInput.createTask(e);\n      handleUserInput.toggleForm('task');\n    }\n    if (e.target.id === 'projectForm') {\n      handleUserInput.createProject(e);\n      handleUserInput.toggleForm('project');\n    }\n    var forms = document.querySelectorAll('form');\n    forms.forEach(function (form) {\n      return form.reset();\n    });\n  });\n  var addProjectBtn = document.querySelector('.addProjectBtn');\n  addProjectBtn.addEventListener('click', function (e) {\n    if (handleUserInput.isFormOpen) return;\n    handleUserInput.toggleForm('project');\n  });\n  var addTaskBtn = document.querySelector('.addTaskBtn');\n  addTaskBtn.addEventListener('click', function () {\n    if (handleUserInput.isFormOpen) return;\n    handleUserInput.toggleForm('task');\n  });\n  var closeFormBtn = document.querySelectorAll('.closeBtn');\n  closeFormBtn.forEach(function (button) {\n    button.addEventListener('click', function (e) {\n      handleUserInput.toggleForm(e.target.id);\n    });\n  });\n  var taskCloseBtn = document.createElement('button');\n  taskCloseBtn.classList.add('closeBtn');\n  taskCloseBtn.id = 'task';\n  taskCloseBtn.textContent = 'X';\n  document.addEventListener('keydown', function (e) {\n    if (e.key === \" \" && !handleUserInput.isFormOpen) {\n      handleUserInput.toggleForm('task');\n    }\n    if (e.key === 'Escape' && handleUserInput.isFormOpen) {\n      handleUserInput.toggleForm(handleUserInput.openForm);\n    }\n    if (e.key === \"ArrowRight\" || e.key === \"ArrowDown\") {\n      handleUserInput.focusNextTask();\n    }\n    if (e.key === \"ArrowLeft\" || e.key === \"ArrowUp\") {\n      handleUserInput.focusPrevTask();\n    }\n    if (e.key === \"Backspace\" && !handleUserInput.isFormOpen) {\n      var taskIdx = projects.findCurrentProject().todoList.indexOf(findCurrentTask());\n      handleUserInput.deleteTask(taskIdx);\n    }\n  });\n  return {\n    addProjectListener: function addProjectListener() {\n      var deleteBtns = document.querySelectorAll('.projects button ~ button');\n      deleteBtns.forEach(function (button) {\n        button.removeEventListener('click', function (e) {\n          return handleUserInput.deleteProject(e);\n        });\n        button.addEventListener('click', function (e) {\n          return handleUserInput.deleteProject(e);\n        });\n      });\n      var projectBtns = document.querySelectorAll('.projects');\n      projectBtns.forEach(function (button) {\n        button.removeEventListener('click', function (e) {\n          return handleUserInput.focusProject(e);\n        });\n        button.addEventListener('click', function (e) {\n          return handleUserInput.focusProject(e);\n        });\n      });\n    },\n    addTaskListener: function addTaskListener() {\n      var deleteBtns = document.querySelectorAll('.todoDeleteBtns');\n      deleteBtns.forEach(function (button) {\n        button.removeEventListener('click', function (e) {\n          return handleUserInput.deleteTask(e);\n        });\n        button.addEventListener('click', function (e) {\n          return handleUserInput.deleteTask(e);\n        });\n      });\n      var titleBtns = document.querySelectorAll('.todos button:first-of-type');\n      titleBtns.forEach(function (button) {\n        button.addEventListener('click', function (e) {\n          return handleUserInput.focusTask(e);\n        });\n      });\n      var checkboxes = document.querySelectorAll('.todos input[type =\"checkbox\"');\n      checkboxes.forEach(function (checkbox) {\n        checkbox.addEventListener('change', function (e) {\n          return handleUserInput.updateTask(e);\n        });\n      });\n    },\n    addFocusTaskListener: function addFocusTaskListener() {\n      var inputs = document.querySelectorAll('.focusTask input');\n      if (inputs.length === 0) return;\n      inputs.forEach(function (input) {\n        input.addEventListener('change', function (e) {\n          handleUserInput.updateTask(e);\n        });\n      });\n      var nextBtn = document.querySelector('.nextBtn');\n      if (!nextBtn) return;\n      nextBtn.addEventListener('click', function () {\n        handleUserInput.focusNextTask();\n      });\n    },\n    update: function update() {\n      populateStorage();\n      ui.update();\n      this.addProjectListener();\n      this.addTaskListener();\n      this.addFocusTaskListener();\n      var focusTask = document.querySelector('.focusTask');\n      if (!projects.findCurrentTask()) {\n        focusTask.style.display = 'none';\n      } else {\n        focusTask.style.display = 'block';\n      }\n    }\n  };\n}();\nvar Task = function Task(title, desc, dueDate, prio) {\n  this.title = title;\n  this.desc = desc;\n  this.dueDate = dueDate;\n  this.prio = prio;\n  this.isDone = false;\n  this.isCurrentTask;\n};\nvar Project = function Project(title) {\n  var newProject = Object.create(Project.prototype);\n  newProject.todoList = [];\n  newProject.title = title;\n  newProject.isCurrentProject;\n  projects.list.push(newProject);\n  projects.focus(projects.list.indexOf(newProject));\n  return newProject;\n};\nProject.prototype = {\n  addTask: function addTask(task) {\n    this.todoList.push(task);\n    this.focusTask(this.todoList.indexOf(task));\n  },\n  removeTask: function removeTask(idx) {\n    this.todoList.splice(idx, 1);\n    UIController.update();\n  },\n  focusTask: function focusTask(idx) {\n    var _this2 = this;\n    if (this.todoList[idx] === undefined) {\n      idx = 0;\n    }\n    this.todoList.forEach(function (task) {\n      task === _this2.todoList[idx] ? task.isCurrentTask = true : task.isCurrentTask = false;\n    });\n    UIController.update();\n  }\n};\nvar handleUserInput = {\n  createTask: function createTask(e) {\n    var title = e.target[0].value;\n    var desc = e.target[1].value;\n    var dueDate = e.target[2].value;\n    var prio = e.target[3].value;\n    var task = new Task(title, desc, dueDate, prio);\n    var currentProject = projects.findCurrentProject();\n    if (!currentProject) {\n      currentProject = Project('myTodoList');\n    }\n    currentProject.addTask(task);\n  },\n  updateTask: function updateTask(e) {\n    var idx = this.getIdx(e);\n    var currentTask = projects.findCurrentProject().todoList[idx];\n    var targetProperty = e.target.id;\n    if (targetProperty === 'isDone') {\n      currentTask.isDone = e.target.checked;\n    } else {\n      currentTask[targetProperty] = e.target.value;\n    }\n    UIController.update();\n  },\n  deleteTask: function deleteTask(e) {\n    var idx = Number.isInteger(e) ? e : this.getIdx(e);\n    var currentProject = projects.findCurrentProject();\n    currentProject.focusTask(idx - 1 ? idx - 1 : 0);\n    currentProject.removeTask(idx);\n  },\n  focusTask: function focusTask(e) {\n    var idx = Number.isInteger(e) ? e : this.getIdx(e);\n    projects.findCurrentProject().focusTask(idx);\n    var firstInput = document.querySelector(\".focusTask input\");\n    firstInput.focus();\n  },\n  focusNextTask: function focusNextTask() {\n    var currentProject = projects.findCurrentProject();\n    var currentIdx = currentProject.todoList.indexOf(projects.findCurrentTask());\n    var newIdx = currentIdx + 1;\n    this.focusTask(newIdx);\n  },\n  focusPrevTask: function focusPrevTask() {\n    var currentProject = projects.findCurrentProject();\n    var currentIdx = currentProject.todoList.indexOf(projects.findCurrentTask());\n    var newIdx = currentIdx - 1;\n    this.focusTask(newIdx);\n  },\n  createProject: function createProject(e) {\n    var createProject = Project(e.target[0].value);\n  },\n  deleteProject: function deleteProject(e) {\n    projects.erase(this.getIdx(e));\n  },\n  focusProject: function focusProject(e) {\n    projects.focus(this.getIdx(e));\n  },\n  toggleForm: function toggleForm(target) {\n    var form = document.querySelector(\".\".concat(target, \"FormWrapper\"));\n    form.classList.toggle('toggleForm');\n    var firstInput = document.querySelector(\".\".concat(target, \"Form input\"));\n    firstInput.focus();\n    this.isFormOpen = !this.isFormOpen;\n    this.openForm = this.isFormOpen ? target : false;\n    this.toggleBtn(target);\n    this.toggleBlur(target);\n  },\n  toggleBtn: function toggleBtn(target) {\n    target = target[0].toUpperCase() + target.slice(1);\n    var btn = document.querySelector(\".add\".concat(target, \"Btn\"));\n    if (target === 'Task') {\n      if (this.isFormOpen) {\n        var minus = _icons_js__WEBPACK_IMPORTED_MODULE_2__.iconMinus.cloneNode(true);\n        btn.textContent = '';\n        btn.append(minus);\n      } else {\n        btn.textContent = '+ add new task (space)';\n      }\n    } else {\n      if (btn.firstChild !== _icons_js__WEBPACK_IMPORTED_MODULE_2__.iconMinus) {\n        btn.textContent = '';\n        btn.append(_icons_js__WEBPACK_IMPORTED_MODULE_2__.iconMinus);\n      } else {\n        btn.textContent = '';\n        btn.append(_icons_js__WEBPACK_IMPORTED_MODULE_2__.iconPlus);\n      }\n    }\n  },\n  toggleBlur: function toggleBlur(target) {\n    if (target === 'task') {\n      var elementsToBlur = document.querySelectorAll('.todoView, .focusTask, .projectSidebar');\n      elementsToBlur.forEach(function (element) {\n        return element.classList.toggle('blur');\n      });\n    } else {\n      var _elementsToBlur = document.querySelector('.main');\n      _elementsToBlur.classList.toggle('blur');\n    }\n  },\n  getIdx: function getIdx(e) {\n    return parseInt(e.target.dataset.idx);\n  },\n  isFormOpen: false,\n  openForm: false\n};\nif (!window.localStorage.getItem('projectList')) {\n  var defaultProject = Project('myProject');\n  populateStorage();\n} else {\n  setProjectsList();\n}\n;\nfunction populateStorage() {\n  localStorage.setItem('projectList', JSON.stringify(projects.list));\n}\n;\nfunction setProjectsList() {\n  var userData = localStorage.getItem('projectList');\n  var parsedData = JSON.parse(userData);\n  parsedData.forEach(function (project) {\n    project = Object.assign(project, Project.prototype);\n  });\n  projects.list = parsedData;\n  UIController.update();\n}\n\n//# sourceURL=webpack://my-webpack-project/./src/index.js?");

/***/ }),

/***/ "./src/ui.js":
/*!*******************!*\
  !*** ./src/ui.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ initializeUI)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"./src/index.js\");\n/* harmony import */ var _icons_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./icons.js */ \"./src/icons.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\nfunction initializeUI() {\n  var content = document.querySelector('.content');\n  var createInput = function createInput(type, labelText, name, parentElement, value, dataIdx) {\n    var label = document.createElement('legend');\n    label.classList.add(name);\n    label.textContent = labelText;\n    var input = document.createElement('input');\n    input.type = type;\n    input.id = name;\n    input.value = value || '';\n    input.dataset.idx = dataIdx;\n    label.append(input);\n    parentElement.append(label);\n    return input;\n  };\n\n  // Project List\n\n  var projectSidebar = document.createElement('div');\n  projectSidebar.classList.add('projectSidebar');\n  content.append(projectSidebar);\n  var logo = document.createElement('h1');\n  logo.textContent = 'Todo-List';\n  var projectList = document.createElement('div');\n  projectList.classList.add('projectList');\n  projectSidebar.append(logo, projectList);\n  var addProjectBtn = document.createElement('button');\n  addProjectBtn.classList.add('addProjectBtn');\n  addProjectBtn.append(_icons_js__WEBPACK_IMPORTED_MODULE_1__.iconPlus);\n  projectSidebar.append(addProjectBtn);\n\n  // Add project form\n\n  var projectFormWrapper = document.createElement('div');\n  projectFormWrapper.classList.add('projectFormWrapper');\n  var projectCloseBtn = document.createElement('button');\n  projectCloseBtn.classList.add('closeBtn');\n  projectCloseBtn.id = 'project';\n  projectCloseBtn.textContent = 'X';\n  var projectForm = document.createElement('form');\n  projectForm.classList.add('projectForm');\n  projectForm.id = 'projectForm';\n  createInput('text', '', 'title', projectForm);\n  var formSubmit = document.createElement('button');\n  formSubmit.type = 'submit';\n  formSubmit.id = 'submit';\n  formSubmit.append(_icons_js__WEBPACK_IMPORTED_MODULE_1__.iconEnter);\n  projectForm.append(formSubmit);\n  projectFormWrapper.append(projectCloseBtn, projectForm);\n  projectSidebar.append(projectFormWrapper);\n\n  // Task list\n\n  var main = document.createElement('div');\n  main.classList.add('main');\n  content.append(main);\n  var addTaskBtn = document.createElement('button');\n  addTaskBtn.classList.add('addTaskBtn');\n  var p = document.createElement('p');\n  p.textContent = '+ add new task (space)';\n  addTaskBtn.append(p);\n  main.append(addTaskBtn);\n  var todoView = document.createElement('div');\n  todoView.classList.add('todoView');\n  main.append(todoView);\n\n  // Focussed Task \n\n  var focusTask = document.createElement('div');\n  focusTask.classList.add('focusTask');\n  main.append(focusTask);\n\n  // Add todo Task form\n\n  var taskFormWrapper = document.createElement('div');\n  taskFormWrapper.classList.add('taskFormWrapper');\n  var taskCloseBtn = document.createElement('button');\n  taskCloseBtn.classList.add('closeBtn');\n  taskCloseBtn.id = 'task';\n  taskCloseBtn.textContent = 'X';\n  var taskForm = document.createElement('form');\n  taskForm.classList.add('taskForm');\n  taskForm.id = 'taskForm';\n  var taskLegend = document.createElement('legend');\n  taskLegend.textContent = 'New Task:';\n  taskForm.append(taskLegend);\n  createInput('text', 'Title: ', 'title', taskForm);\n  createInput('text', 'Description: ', 'desc', taskForm);\n  createInput('date', 'Due Date: ', 'date', taskForm);\n  createInput('range', 'Priority: ', 'prio', taskForm);\n  var taskSubmit = document.createElement('button');\n  taskSubmit.type = 'submit';\n  taskSubmit.id = 'submit';\n  var iconEnterClone = _icons_js__WEBPACK_IMPORTED_MODULE_1__.iconEnter.cloneNode(true);\n  taskSubmit.append(iconEnterClone);\n  taskForm.append(taskSubmit);\n  taskFormWrapper.append(taskCloseBtn, taskForm);\n  main.append(taskFormWrapper);\n  var addRangeInputAttrs = function addRangeInputAttrs(selector) {\n    var prioInp = document.querySelector(selector);\n    prioInp.min = '1';\n    prioInp.max = '3';\n    prioInp.step = '1';\n  };\n  addRangeInputAttrs('#prio');\n  var update = function update() {\n    var currentProject = _index_js__WEBPACK_IMPORTED_MODULE_0__.projects.findCurrentProject();\n    var currentTask = _index_js__WEBPACK_IMPORTED_MODULE_0__.projects.findCurrentTask();\n    var updateProjectSidebar = function () {\n      projectList.innerHTML = '';\n      _index_js__WEBPACK_IMPORTED_MODULE_0__.projects.list.forEach(function (project) {\n        var idx = _index_js__WEBPACK_IMPORTED_MODULE_0__.projects.list.indexOf(project);\n        var div = document.createElement('div');\n        div.classList.add('projects');\n        div.dataset.idx = idx;\n        var btn = document.createElement('button');\n        btn.dataset.idx = idx;\n        btn.textContent = project.title;\n        var erase = document.createElement('button');\n        erase.dataset.idx = idx;\n        erase.textContent = 'X';\n        div.append(btn, erase);\n        projectList.append(div);\n        if (project === currentProject) {\n          btn.classList.add('active');\n        }\n      });\n    }();\n    var updateTodoView = function () {\n      todoView.innerHTML = '';\n      if (!currentProject) return;\n      var _iterator = _createForOfIteratorHelper(currentProject.todoList),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _task = _step.value;\n          var taskIdx = currentProject.todoList.indexOf(_task);\n          var div = document.createElement('div');\n          div.classList.add('todos');\n          div.dataset.idx = taskIdx;\n          var title = document.createElement('button');\n          title.classList.add('todoTitleBtns');\n          title.textContent = _task.title;\n          title.dataset.idx = taskIdx;\n          if (_task === currentTask) {\n            title.classList.add('active');\n          }\n          var priority = document.createElement('div');\n          priority.classList.add('taskPriority');\n          if (_task.isDone) priority.style.backgroundColor = 'green';else if (_task.prio == 1) priority.style.backgroundColor = 'yellow';else if (_task.prio == 2) priority.style.backgroundColor = 'orange';else if (_task.prio == 3) priority.style.backgroundColor = 'red';\n          var checkboxContainer = document.createElement('label');\n          checkboxContainer.classList.add('checkboxContainer');\n          var checkbox = document.createElement('input');\n          checkbox.dataset.idx = taskIdx;\n          checkbox.type = 'checkbox';\n          checkbox.id = 'isDone';\n          checkbox.classList.add('checkbox');\n          checkbox.checked = _task.isDone;\n          var checkMark = document.createElement('span');\n          checkMark.classList.add('checkMark');\n          checkboxContainer.append(checkbox, checkMark);\n          var deleteBtn = document.createElement('button');\n          deleteBtn.classList.add('todoDeleteBtns');\n          deleteBtn.textContent = 'X';\n          deleteBtn.dataset.idx = taskIdx;\n          div.append(title, priority, checkboxContainer, deleteBtn);\n          todoView.append(div);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }();\n    var updateFocusTask = function () {\n      focusTask.innerHTML = '';\n      if (!currentTask) {\n        return;\n      }\n      var taskIdx = currentProject.todoList.indexOf(currentTask);\n      var projectTitle = document.createElement('h1');\n      projectTitle.textContent = currentProject.title;\n      var projectLen = document.createElement('p');\n      projectLen.textContent = \"\".concat(taskIdx + 1, \"/\").concat(currentProject.todoList.length);\n      focusTask.append(projectTitle, projectLen);\n      // (type, labelText, name, parentElement, value, dataIdx)\n      createInput('text', '', 'title', focusTask, currentTask.title, taskIdx);\n      createInput('text', '', 'desc', focusTask, currentTask.desc, taskIdx);\n      createInput('date', '', 'dueDate', focusTask, currentTask.dueDate, taskIdx);\n      createInput('range', 'Priority: ', 'prio', focusTask, currentTask.prio, taskIdx);\n      var priority = document.createElement('div');\n      priority.classList.add('taskPriority');\n      if (currentTask.isDone) priority.style.backgroundColor = 'green';else if (currentTask.prio == 1) priority.style.backgroundColor = 'yellow';else if (currentTask.prio == 2) priority.style.backgroundColor = 'orange';else if (currentTask.prio == 3) priority.style.backgroundColor = 'red';\n      focusTask.append(priority);\n      addRangeInputAttrs('.focusTask #prio');\n      var wrapper = document.createElement('div');\n      wrapper.classList.add('wrapper');\n      var checkboxContainer = document.createElement('label');\n      checkboxContainer.classList.add('checkboxContainer');\n      var p = document.createElement('p');\n      p.textContent = 'Done?';\n      var checkbox = document.createElement('input');\n      checkbox.dataset.idx = taskIdx;\n      checkbox.type = 'checkbox';\n      checkbox.id = 'isDone';\n      checkbox.classList.add('checkbox');\n      checkbox.checked = currentTask.isDone;\n      var checkMark = document.createElement('span');\n      checkMark.classList.add('checkMark');\n      checkboxContainer.append(checkbox, checkMark);\n      document.querySelector('.focusTask input[type = \"range\"]').disabled = task.isDone;\n      var nextBtn = document.createElement('button');\n      nextBtn.classList.add('nextBtn');\n      nextBtn.dataset.idx = taskIdx;\n      nextBtn.innerHTML = '&#x27A1;';\n      var deleteBtn = document.createElement('button');\n      deleteBtn.classList.add('todoDeleteBtns');\n      deleteBtn.textContent = 'X';\n      deleteBtn.dataset.idx = taskIdx;\n      wrapper.append(checkboxContainer, nextBtn, deleteBtn);\n      focusTask.append(wrapper);\n    }();\n  };\n  return {\n    initializeUI: initializeUI,\n    update: update\n  };\n}\n\n//# sourceURL=webpack://my-webpack-project/./src/ui.js?");

/***/ }),

/***/ "./src/style.css":
/*!***********************!*\
  !*** ./src/style.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://my-webpack-project/./src/style.css?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;